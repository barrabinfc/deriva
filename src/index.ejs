<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>deriva</title>
  <meta name="application-name" content="deriva">

  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <!-- <link rel="shortcut icon" href="favicon.ico?v=3" /> -->

  <meta name="description" content="Deriva is an documentary aggregator in portuguese.">
  <meta property="og:image" content="https://snapdrop.net/images/touch/chrome-splashscreen-icon-384x384.png" />
  <meta property="og:url" content="https://deriva.net/" />

  <style>

    body { margin: 0; padding: 0; }
    .welcome-screen h1 {
      margin: 0px auto;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      font-family: 'Abel', sans-serif;
      text-transform: uppercase;
      font-weight: bold;
      font-size: 36px;
      color: #333;
      line-height: 1.6;
    }

    #loading-bar {
      position: absolute;
      top: 0px;
      height: 10px;
      width: 0%;
      background-color: #ff00ff;

      transition: width 0.35s ease-out;
    }
  </style>
</head>
<body>
  <div id="container">
    <div class="welcome-screen">
      <h1>ðŸ‰‘deriva</h1>
      <div class="loading-bar" id="loading-bar">
      </div>
    </div>
  </div>

  <script type="text/javascript">
    window.manifest = {
      version: "<%= htmlWebpackPlugin.options.version %>",
      files: JSON.parse('<%= JSON.stringify(htmlWebpackPlugin.files) %>')
    }


    /*
     * Load all assets with a progress bar
     */
    var Loader = window.Loader = {
      start: function(){
        var self   = this;
        var styles = window.manifest.files.css;
        var vendor = window.manifest.files.chunks.lib1;
        var app    = [window.manifest.files.chunks.lib2, window.manifest.files.chunks.app];

        var loading_bar_el = document.querySelector('#loading-bar');
        this.loading_bar_el = loading_bar_el;

        // get total file size in MB
        this.styles = styles;
        this.scripts = {vendor: vendor, app: app};
        this.loaded_bytes = 0;
        this.total_size = [vendor, app[0], app[1], styles[0]].map( function(chunk){ return chunk.size } )
                              .reduce( function(chunk1, chunk2){ return chunk1+chunk2; } );
        console.log('Loading ',this.total_size/(1024*1024),' MB in javascript in ', window.manifest.files.js.length, ' files');

        /* Load vendor */
        this.appendScripts( [this.createScript( vendor.entry, 'text-javascript',function(){
          self.loaded( vendor );
          var scripts = app.map( function(chunk) {
            return self.create( chunk.entry, 'text/javascript', function(){
              self.loaded( chunk );
            });
          });
          self.appendScripts( scripts );

        })]);

      },

      loaded: function( chunk ){
        this.loaded_bytes += chunk.size;
        var pct = Math.trunc((this.loaded_bytes / this.total_size)*100);

        this.loading_bar_el.style.width = pct+'%';
        this.loading_bar_el.offsetWidth;   // reflow necessary;

        if(pct == 100){ this.complete(); }
      },

      complete: function( ){
        window.start();
      },

      // Create a shadow DOM script tag
      loadAsset: function(src , type, on_load_cb) {
        var script = document.createElement( (type == 'text/javascript' ? 'script' : 'style') ));
        script.type = type || 'text/javascript';
        script.src  = src;
        script.async = true;
        script.onload = function( e ){
          this.loaded( e.target );
        };
        return script;
      },

      // Append multiple scripts in a single DOM operation
      appendScripts: function( scripts ){
        var scriptsFrag = document.createDocumentFragment();
        for(var i=0; i < scripts.length; i++){ scriptsFrag.appendChild( scripts[i] ); }
        document.body.appendChild( scriptsFrag );
      }
    };
    Loader.start();
  </script>
</body>
</html>
